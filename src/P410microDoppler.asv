%##########################################################################
%#####  Progrtram converts the EXCEL file into a *.mat file ###############
%##########################################################################
%
%--------------------------------------
% Author:       Ronny (Gerhard) Guendel
% Written by:   Microwave Sensing, Signals and Systems (MS3)
% University:   TU Delft
% Email:        r.guendel@tudelft.nl
% Created:      01/15/2020
% Updated:      03/24/2020

%% set clear
clc; clear all;   %close all;
set(0,'DefaultAxesFontSize',14);
set(0,'DefaultFigureWindowStyle','docked');
set(0,'Defaultlinelinewidth',2);

%% for the EXCEL file
% [cfg,req,scn,det] = readMrmRetLog;

% for the matlab file *.mat
[file,path] = uigetfile('C:\Research\PulsON check\threeRadCol','*.mat');
load([path,file]);

%% parameter and vector scan
NScans = length(scn);
scans = [scn.scn];
NTS = scn.Nscn;

%% MTI Filter
h = [1 -2 1];
scansMTI= filter(h,1,scans,[],2);
% scansMTI= scans;
scansMTI = reshape(scansMTI,[],NScans);
dt_ps = (cfg.Tstp-cfg.Tstrt)/1e12;
fs = 1e12/dt_ps; %[Hz]

fs_slow = 1/7.5e-3;
T = 1/fs_slow*size(scansMTI,2);

c = 3e8; 
Rmin = 1; % 1meter
Rmax = (cfg.Tstp-cfg.Tstrt)/1e12*c/2 + Rmin;
%% Subtracting the mean form the in-phase and quatrature components
scansMTI = scansMTI-mean(scansMTI,2);
fig = figure;
imagesc([0 T],[Rmin Rmax],10*log10(abs(scansMTI))); axis xy; title(['Range map -- ']);%, file(1:3)])
colormap jet
colorbar;
caxis([max(max(10*log10(abs(scansMTI))))-30, inf]);

%% hilbert enveloping
hil = hilbert(scansMTI(:)); % after MTI and mean substraction
hil_resha = reshape(hil,NTS,NScans);
RM_hil = 10*log10(abs(hil_resha));
fig = figure;
imagesc([0 T],[Rmin Rmax],RM_hil);title('Range map'); axis xy
colormap jet
colorbar;
caxis([max(max(RM_hil))-30, inf]);

%% spectrogram
specs = fft(scansMTI);
neededRangeBins = [70:110]; %[70:110]; % ,270:310 The best for 384 bins

% sprecrogram computation function
[S_sum, f,t] = spectr(specs, neededRangeBins,fs_slow);

figure;
sspec_sum = fftshift(10*log10(S_sum)',2)';
imagesc(t, f-f(end)/2,sspec_sum); axis xy
colormap jet; colorbar

%% time stamp
figure;
plot(diff([scn.Tstmp]),'.');

%% error statement 
if max(diff([scn.Tstmp])) > min(diff([scn.Tstmp]))+1
   fprintf('the minimum time between \nthe timestamps is %d whereas\nthe max timestamp is %d\n',min(diff([scn.Tstmp])),max(diff([scn.Tstmp]))); 
    disp('press any key to contin');pause; 
end

%% range map and spectorgram rezizing
psd_resize = imresize(RM_hil,[128 64*T]);  % RM image
sspec_resize = mat2gray(imresize(sspec_sum,[128 64*T]));  % spectrogram image


%% plot the final images 
figure();
subplot(211);
imagesc([0 t],[0 4.4],psd_resize); axis xy
colormap jet; colorbar

subplot(212);
imagesc([0 t],[-f(end)/2 f(end)/2],sspec_resize); axis xy
colormap jet; colorbar
